version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: glovo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - glovo-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - glovo-network

  mongodb:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - glovo-network

  # Message Queue
  nats:
    image: nats:2-alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - glovo-network

  # User Service
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    ports:
      - "8001:8001"
    environment:
      PORT: 8001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: user_service_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis
    networks:
      - glovo-network

  # Order Service
  order-service:
    build:
      context: .
      dockerfile: services/order-service/Dockerfile
    ports:
      - "8002:8002"
    environment:
      PORT: 8002
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: order_service_db
    depends_on:
      - postgres
      - nats
    networks:
      - glovo-network

  # Catalog Service
  catalog-service:
    build:
      context: .
      dockerfile: services/catalog-service/Dockerfile
    ports:
      - "8003:8003"
    environment:
      PORT: 8003
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: catalog_service_db
    depends_on:
      - postgres
    networks:
      - glovo-network

  # Delivery Service
  delivery-service:
    build:
      context: .
      dockerfile: services/delivery-service/Dockerfile
    ports:
      - "8004:8004"
    environment:
      PORT: 8004
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: delivery_service_db
    depends_on:
      - postgres
      - nats
    networks:
      - glovo-network

  # Driver Service
  driver-service:
    build:
      context: .
      dockerfile: services/driver-service/Dockerfile
    ports:
      - "8005:8005"
    environment:
      PORT: 8005
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: driver_service_db
    depends_on:
      - postgres
    networks:
      - glovo-network

  # Payment Service
  payment-service:
    build:
      context: .
      dockerfile: services/payment-service/Dockerfile
    ports:
      - "8007:8007"
    environment:
      PAYMENT_SERVICE_PORT: 8007
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: payment_service_db
    depends_on:
      - postgres
    networks:
      - glovo-network

  # Location Service
  location-service:
    build:
      context: .
      dockerfile: services/location-service/Dockerfile
    ports:
      - "8008:8008"
    environment:
      LOCATION_SERVICE_PORT: 8008
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USER: root
      MONGO_PASSWORD: password
      MONGO_DB: location_service_db
    depends_on:
      - mongodb
    networks:
      - glovo-network

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
    ports:
      - "8009:8009"
    environment:
      NOTIFICATION_SERVICE_PORT: 8009
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: notification_service_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
    depends_on:
      - postgres
      - redis
      - nats
    networks:
      - glovo-network

  # Admin Service
  admin-service:
    build:
      context: .
      dockerfile: services/admin-service/Dockerfile
    ports:
      - "8010:8010"
    environment:
      ADMIN_SERVICE_PORT: 8010
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: admin_service_db
    depends_on:
      - postgres
    networks:
      - glovo-network

  # Analytics Service (Optional)
  analytics-service:
    build:
      context: .
      dockerfile: services/analytics-service/Dockerfile
    ports:
      - "8011:8011"
    environment:
      ANALYTICS_SERVICE_PORT: 8011
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: analytics_service_db
    depends_on:
      - postgres
    networks:
      - glovo-network

  # API Gateway (Optional)
  api-gateway:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service
      - order-service
      - catalog-service
      - delivery-service
      - driver-service
      - location-service
      - payment-service
      - notification-service
      - admin-service
    networks:
      - glovo-network

volumes:
  postgres_data:
  redis_data:
  mongodb_data:

networks:
  glovo-network:
    driver: bridge 