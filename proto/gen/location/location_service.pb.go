// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/location_service.proto

package location

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messages
type UpdateDriverLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Heading       float64                `protobuf:"fixed64,4,opt,name=heading,proto3" json:"heading,omitempty"`
	Speed         float64                `protobuf:"fixed64,5,opt,name=speed,proto3" json:"speed,omitempty"`
	Accuracy      float64                `protobuf:"fixed64,6,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	Timestamp     int64                  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverLocationRequest) Reset() {
	*x = UpdateDriverLocationRequest{}
	mi := &file_proto_location_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverLocationRequest) ProtoMessage() {}

func (x *UpdateDriverLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateDriverLocationRequest) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateDriverLocationRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *UpdateDriverLocationRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateDriverLocationRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *UpdateDriverLocationRequest) GetHeading() float64 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *UpdateDriverLocationRequest) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *UpdateDriverLocationRequest) GetAccuracy() float64 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *UpdateDriverLocationRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type UpdateDriverLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverLocationResponse) Reset() {
	*x = UpdateDriverLocationResponse{}
	mi := &file_proto_location_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverLocationResponse) ProtoMessage() {}

func (x *UpdateDriverLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateDriverLocationResponse) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateDriverLocationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateDriverLocationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetDriverLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDriverLocationRequest) Reset() {
	*x = GetDriverLocationRequest{}
	mi := &file_proto_location_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriverLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriverLocationRequest) ProtoMessage() {}

func (x *GetDriverLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriverLocationRequest.ProtoReflect.Descriptor instead.
func (*GetDriverLocationRequest) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetDriverLocationRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type GetDriverLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      *DriverLocation        `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDriverLocationResponse) Reset() {
	*x = GetDriverLocationResponse{}
	mi := &file_proto_location_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriverLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriverLocationResponse) ProtoMessage() {}

func (x *GetDriverLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriverLocationResponse.ProtoReflect.Descriptor instead.
func (*GetDriverLocationResponse) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetDriverLocationResponse) GetLocation() *DriverLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *GetDriverLocationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetDriverLocationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetNearbyDriversRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	RadiusKm      float64                `protobuf:"fixed64,3,opt,name=radius_km,json=radiusKm,proto3" json:"radius_km,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	StatusFilter  string                 `protobuf:"bytes,5,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNearbyDriversRequest) Reset() {
	*x = GetNearbyDriversRequest{}
	mi := &file_proto_location_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNearbyDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNearbyDriversRequest) ProtoMessage() {}

func (x *GetNearbyDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNearbyDriversRequest.ProtoReflect.Descriptor instead.
func (*GetNearbyDriversRequest) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetNearbyDriversRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetNearbyDriversRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetNearbyDriversRequest) GetRadiusKm() float64 {
	if x != nil {
		return x.RadiusKm
	}
	return 0
}

func (x *GetNearbyDriversRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetNearbyDriversRequest) GetStatusFilter() string {
	if x != nil {
		return x.StatusFilter
	}
	return ""
}

type GetNearbyDriversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Drivers       []*NearbyDriver        `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNearbyDriversResponse) Reset() {
	*x = GetNearbyDriversResponse{}
	mi := &file_proto_location_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNearbyDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNearbyDriversResponse) ProtoMessage() {}

func (x *GetNearbyDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNearbyDriversResponse.ProtoReflect.Descriptor instead.
func (*GetNearbyDriversResponse) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetNearbyDriversResponse) GetDrivers() []*NearbyDriver {
	if x != nil {
		return x.Drivers
	}
	return nil
}

type StreamDriverLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamDriverLocationRequest) Reset() {
	*x = StreamDriverLocationRequest{}
	mi := &file_proto_location_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamDriverLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDriverLocationRequest) ProtoMessage() {}

func (x *StreamDriverLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDriverLocationRequest.ProtoReflect.Descriptor instead.
func (*StreamDriverLocationRequest) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{6}
}

func (x *StreamDriverLocationRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type LocationUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Heading       float64                `protobuf:"fixed64,4,opt,name=heading,proto3" json:"heading,omitempty"`
	Speed         float64                `protobuf:"fixed64,5,opt,name=speed,proto3" json:"speed,omitempty"`
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationUpdate) Reset() {
	*x = LocationUpdate{}
	mi := &file_proto_location_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdate) ProtoMessage() {}

func (x *LocationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdate.ProtoReflect.Descriptor instead.
func (*LocationUpdate) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{7}
}

func (x *LocationUpdate) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *LocationUpdate) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LocationUpdate) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationUpdate) GetHeading() float64 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *LocationUpdate) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *LocationUpdate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LocationUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateRouteProgressRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OrderId          string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	DriverId         string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	CurrentLatitude  float64                `protobuf:"fixed64,3,opt,name=current_latitude,json=currentLatitude,proto3" json:"current_latitude,omitempty"`
	CurrentLongitude float64                `protobuf:"fixed64,4,opt,name=current_longitude,json=currentLongitude,proto3" json:"current_longitude,omitempty"`
	Status           string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateRouteProgressRequest) Reset() {
	*x = UpdateRouteProgressRequest{}
	mi := &file_proto_location_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRouteProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteProgressRequest) ProtoMessage() {}

func (x *UpdateRouteProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdateRouteProgressRequest) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRouteProgressRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdateRouteProgressRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *UpdateRouteProgressRequest) GetCurrentLatitude() float64 {
	if x != nil {
		return x.CurrentLatitude
	}
	return 0
}

func (x *UpdateRouteProgressRequest) GetCurrentLongitude() float64 {
	if x != nil {
		return x.CurrentLongitude
	}
	return 0
}

func (x *UpdateRouteProgressRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateRouteProgressResponse struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Success                   bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error                     string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	EstimatedMinutesRemaining int32                  `protobuf:"varint,3,opt,name=estimated_minutes_remaining,json=estimatedMinutesRemaining,proto3" json:"estimated_minutes_remaining,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UpdateRouteProgressResponse) Reset() {
	*x = UpdateRouteProgressResponse{}
	mi := &file_proto_location_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRouteProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteProgressResponse) ProtoMessage() {}

func (x *UpdateRouteProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteProgressResponse.ProtoReflect.Descriptor instead.
func (*UpdateRouteProgressResponse) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRouteProgressResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateRouteProgressResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *UpdateRouteProgressResponse) GetEstimatedMinutesRemaining() int32 {
	if x != nil {
		return x.EstimatedMinutesRemaining
	}
	return 0
}

type DriverLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Heading       float64                `protobuf:"fixed64,4,opt,name=heading,proto3" json:"heading,omitempty"`
	Speed         float64                `protobuf:"fixed64,5,opt,name=speed,proto3" json:"speed,omitempty"`
	Accuracy      float64                `protobuf:"fixed64,6,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverLocation) Reset() {
	*x = DriverLocation{}
	mi := &file_proto_location_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLocation) ProtoMessage() {}

func (x *DriverLocation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLocation.ProtoReflect.Descriptor instead.
func (*DriverLocation) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{10}
}

func (x *DriverLocation) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *DriverLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *DriverLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *DriverLocation) GetHeading() float64 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *DriverLocation) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *DriverLocation) GetAccuracy() float64 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *DriverLocation) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DriverLocation) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type NearbyDriver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	DistanceKm    float64                `protobuf:"fixed64,4,opt,name=distance_km,json=distanceKm,proto3" json:"distance_km,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Rating        float64                `protobuf:"fixed64,6,opt,name=rating,proto3" json:"rating,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearbyDriver) Reset() {
	*x = NearbyDriver{}
	mi := &file_proto_location_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearbyDriver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearbyDriver) ProtoMessage() {}

func (x *NearbyDriver) ProtoReflect() protoreflect.Message {
	mi := &file_proto_location_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearbyDriver.ProtoReflect.Descriptor instead.
func (*NearbyDriver) Descriptor() ([]byte, []int) {
	return file_proto_location_service_proto_rawDescGZIP(), []int{11}
}

func (x *NearbyDriver) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *NearbyDriver) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *NearbyDriver) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *NearbyDriver) GetDistanceKm() float64 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

func (x *NearbyDriver) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NearbyDriver) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

var File_proto_location_service_proto protoreflect.FileDescriptor

const file_proto_location_service_proto_rawDesc = "" +
	"\n" +
	"\x1cproto/location_service.proto\x12\blocation\"\xde\x01\n" +
	"\x1bUpdateDriverLocationRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x18\n" +
	"\aheading\x18\x04 \x01(\x01R\aheading\x12\x14\n" +
	"\x05speed\x18\x05 \x01(\x01R\x05speed\x12\x1a\n" +
	"\baccuracy\x18\x06 \x01(\x01R\baccuracy\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x03R\ttimestamp\"N\n" +
	"\x1cUpdateDriverLocationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"7\n" +
	"\x18GetDriverLocationRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\"\x81\x01\n" +
	"\x19GetDriverLocationResponse\x124\n" +
	"\blocation\x18\x01 \x01(\v2\x18.location.DriverLocationR\blocation\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xab\x01\n" +
	"\x17GetNearbyDriversRequest\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x1b\n" +
	"\tradius_km\x18\x03 \x01(\x01R\bradiusKm\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12#\n" +
	"\rstatus_filter\x18\x05 \x01(\tR\fstatusFilter\"L\n" +
	"\x18GetNearbyDriversResponse\x120\n" +
	"\adrivers\x18\x01 \x03(\v2\x16.location.NearbyDriverR\adrivers\":\n" +
	"\x1bStreamDriverLocationRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\"\xcd\x01\n" +
	"\x0eLocationUpdate\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x18\n" +
	"\aheading\x18\x04 \x01(\x01R\aheading\x12\x14\n" +
	"\x05speed\x18\x05 \x01(\x01R\x05speed\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\"\xc4\x01\n" +
	"\x1aUpdateRouteProgressRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\x12)\n" +
	"\x10current_latitude\x18\x03 \x01(\x01R\x0fcurrentLatitude\x12+\n" +
	"\x11current_longitude\x18\x04 \x01(\x01R\x10currentLongitude\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\"\x8d\x01\n" +
	"\x1bUpdateRouteProgressResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12>\n" +
	"\x1bestimated_minutes_remaining\x18\x03 \x01(\x05R\x19estimatedMinutesRemaining\"\xea\x01\n" +
	"\x0eDriverLocation\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x18\n" +
	"\aheading\x18\x04 \x01(\x01R\aheading\x12\x14\n" +
	"\x05speed\x18\x05 \x01(\x01R\x05speed\x12\x1a\n" +
	"\baccuracy\x18\x06 \x01(\x01R\baccuracy\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\x03R\tupdatedAt\"\xb6\x01\n" +
	"\fNearbyDriver\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x1f\n" +
	"\vdistance_km\x18\x04 \x01(\x01R\n" +
	"distanceKm\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x16\n" +
	"\x06rating\x18\x06 \x01(\x01R\x06rating2\xf0\x03\n" +
	"\x0fLocationService\x12e\n" +
	"\x14UpdateDriverLocation\x12%.location.UpdateDriverLocationRequest\x1a&.location.UpdateDriverLocationResponse\x12\\\n" +
	"\x11GetDriverLocation\x12\".location.GetDriverLocationRequest\x1a#.location.GetDriverLocationResponse\x12Y\n" +
	"\x10GetNearbyDrivers\x12!.location.GetNearbyDriversRequest\x1a\".location.GetNearbyDriversResponse\x12Y\n" +
	"\x14StreamDriverLocation\x12%.location.StreamDriverLocationRequest\x1a\x18.location.LocationUpdate0\x01\x12b\n" +
	"\x13UpdateRouteProgress\x12$.location.UpdateRouteProgressRequest\x1a%.location.UpdateRouteProgressResponseB\"Z glovo-backend/proto/gen/locationb\x06proto3"

var (
	file_proto_location_service_proto_rawDescOnce sync.Once
	file_proto_location_service_proto_rawDescData []byte
)

func file_proto_location_service_proto_rawDescGZIP() []byte {
	file_proto_location_service_proto_rawDescOnce.Do(func() {
		file_proto_location_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_location_service_proto_rawDesc), len(file_proto_location_service_proto_rawDesc)))
	})
	return file_proto_location_service_proto_rawDescData
}

var file_proto_location_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_location_service_proto_goTypes = []any{
	(*UpdateDriverLocationRequest)(nil),  // 0: location.UpdateDriverLocationRequest
	(*UpdateDriverLocationResponse)(nil), // 1: location.UpdateDriverLocationResponse
	(*GetDriverLocationRequest)(nil),     // 2: location.GetDriverLocationRequest
	(*GetDriverLocationResponse)(nil),    // 3: location.GetDriverLocationResponse
	(*GetNearbyDriversRequest)(nil),      // 4: location.GetNearbyDriversRequest
	(*GetNearbyDriversResponse)(nil),     // 5: location.GetNearbyDriversResponse
	(*StreamDriverLocationRequest)(nil),  // 6: location.StreamDriverLocationRequest
	(*LocationUpdate)(nil),               // 7: location.LocationUpdate
	(*UpdateRouteProgressRequest)(nil),   // 8: location.UpdateRouteProgressRequest
	(*UpdateRouteProgressResponse)(nil),  // 9: location.UpdateRouteProgressResponse
	(*DriverLocation)(nil),               // 10: location.DriverLocation
	(*NearbyDriver)(nil),                 // 11: location.NearbyDriver
}
var file_proto_location_service_proto_depIdxs = []int32{
	10, // 0: location.GetDriverLocationResponse.location:type_name -> location.DriverLocation
	11, // 1: location.GetNearbyDriversResponse.drivers:type_name -> location.NearbyDriver
	0,  // 2: location.LocationService.UpdateDriverLocation:input_type -> location.UpdateDriverLocationRequest
	2,  // 3: location.LocationService.GetDriverLocation:input_type -> location.GetDriverLocationRequest
	4,  // 4: location.LocationService.GetNearbyDrivers:input_type -> location.GetNearbyDriversRequest
	6,  // 5: location.LocationService.StreamDriverLocation:input_type -> location.StreamDriverLocationRequest
	8,  // 6: location.LocationService.UpdateRouteProgress:input_type -> location.UpdateRouteProgressRequest
	1,  // 7: location.LocationService.UpdateDriverLocation:output_type -> location.UpdateDriverLocationResponse
	3,  // 8: location.LocationService.GetDriverLocation:output_type -> location.GetDriverLocationResponse
	5,  // 9: location.LocationService.GetNearbyDrivers:output_type -> location.GetNearbyDriversResponse
	7,  // 10: location.LocationService.StreamDriverLocation:output_type -> location.LocationUpdate
	9,  // 11: location.LocationService.UpdateRouteProgress:output_type -> location.UpdateRouteProgressResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_location_service_proto_init() }
func file_proto_location_service_proto_init() {
	if File_proto_location_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_location_service_proto_rawDesc), len(file_proto_location_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_location_service_proto_goTypes,
		DependencyIndexes: file_proto_location_service_proto_depIdxs,
		MessageInfos:      file_proto_location_service_proto_msgTypes,
	}.Build()
	File_proto_location_service_proto = out.File
	file_proto_location_service_proto_goTypes = nil
	file_proto_location_service_proto_depIdxs = nil
}
